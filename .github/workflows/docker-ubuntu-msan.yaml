name: Ubuntu memory sanitizer

on:
  push:
  pull_request:
    branches: [ "main" ]

env:
  CC: clang

jobs:
  docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ASM: ["asm=yes", "asm=no"]
        CONTAINER: ["ubuntu:24.04", "ubuntu:24.10"]
      fail-fast: false
    container: ${{ matrix.CONTAINER }}
    steps:
    - uses: actions/checkout@v4

    - name: Install Ubuntu miminal golang deps
      run: ./misc/install-debian-deps-go-sanitizer.sh

    - name: Build C library with msan
      env:
        CFLAGS: -fsanitize=memory -fno-omit-frame-pointer -fsanitize-memory-param-retval -fsanitize-memory-track-origins -g3 -fno-lto
        LDFLAGS: -Wl,-z,stack-size=0x1F40000
      run: |
        autoreconf -fi
        ./configure --prefix="${HOME}/inst" --disable-silent-rules --disable-shared --enable-static --enable-${{ matrix.ASM }}
        make install
        echo PKG_CONFIG_PATH="${HOME}/inst/lib/pkgconfig" >> $GITHUB_ENV

    - name: Show go env
      run: go env

    - name: Build and test with msan
      run: cd src/ctidh1024 && go test -v -msan ./...
